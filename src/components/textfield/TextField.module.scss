@use "../../scss/mixins/inner-reset" as *;

$color: rgba(255, 255, 255, 0.7);
$blue: rgb(144, 202, 249);
$error: #d32f2f;
$error-active: #f44336;

.textfield {
  @include inner-reset;

  & {
    box-sizing: border-box;
    position: relative;
  }

  &-input {
    position: relative;
    font-size: 1rem;
    color: #fff;
    border: none;
    background: none;
    width: 100%;
    height: 100%;
    min-height: 1.5rem;
    outline: none;
    z-index: 1;
  }

  &-label {
    position: absolute;
    top: 0;
    left: 0;
    color: $color;
    transition: transform 0.3s ease;
    transform-origin: bottom left;
  }

  &-standard,
  &-filled {
    > .textfield-input-wrapper::after {
      content: "";
      position: absolute;
      display: block;
      width: 100%;
      height: 1px;
      background-color: $color;
      bottom: 0;
      left: 0;
    }
  }

  &:not(.textfield-focused):not(.textfield-error):hover
    > &-input-wrapper::after {
    background-color: #fff;
  }

  &-standard {
    .textfield-input {
      padding: 0.25rem 0;
      margin-top: 1rem;
    }

    &:not(.textfield-not-empty) .textfield-label {
      transform: translateY(1.5rem);
    }

    &.textfield-focused,
    &.textfield-not-empty {
      .textfield-label {
        transform: translate(0, 0) scale(0.75);
      }
    }
  }

  &-filled {
    border-radius: 0.25rem 0.25rem 0 0;
    background-color: rgba(255, 255, 255, 0.09);

    .textfield-input {
      padding: 1.5rem 0.75rem 0.25rem;
    }

    &:not(.textfield-focused):hover {
      background-color: rgba(255, 255, 255, 0.12);
    }

    &:not(.textfield-not-empty) .textfield-label {
      transform: translate(0.75rem, 0.85rem);
    }

    &.textfield-focused,
    &.textfield-not-empty {
      .textfield-label {
        transform: translate(0.75rem, 0.25rem) scale(0.75);
      }
    }
  }

  &-outlined {
    border: 1px solid $color;
    border-radius: 0.25rem;

    .textfield-input {
      padding: 0.875rem 1rem;
    }

    &:not(.textfield-not-empty) .textfield-label {
      transform: translate(0.875rem, 1rem);
    }

    &.textfield-focused,
    &.textfield-not-empty {
      border: none;
      margin-bottom: 0.4rem;

      .textfield-label {
        transform: translate(1.25rem, -0.75rem) scale(0.6);
      }
    }

    &:not(.textfield-error):hover {
      border-color: #fff;
    }

    &.textfield-focused {
      border-color: $blue;
    }

    &.textfield-error {
      border-color: $error;
    }
  }

  &-focused {
    .textfield-label {
      color: $blue;
    }

    &.textfield-error .textfield-label {
      color: $error;
    }

    > .textfield-input-wrapper::after {
      background-color: $blue;
      height: 2px;
    }

    &.textfield-error > .textfield-input-wrapper::after {
      background-color: $error-active;
    }

    .textfield-fieldset {
      border-color: $blue;
    }
  }

  &-error {
    .textfield {
      &-label {
        color: $error;
      }

      &-fieldset {
        border-color: $error-active;
      }
    }

    > .textfield-input-wrapper::after {
      background-color: $error;
    }

    &-message {
      color: $error;
      font-size: 0.75rem;
      margin-top: 0.25rem;
    }
  }

  &-container-filled &-error-message {
    margin-left: 0.75rem;
  }

  &-container-outlined &-error-message {
    margin-left: 1rem;
  }

  &-fieldset {
    position: absolute;
    top: -0.4rem;
    width: 100%;
    height: calc(100% + 0.5rem);
    border-radius: 0.25rem;
    border-color: $color;
    border-width: 1px;
    padding: 0.875rem 1rem;

    &-legend {
      color: $color;
      font-size: 0.75rem;
      opacity: 0;
    }
  }
}
